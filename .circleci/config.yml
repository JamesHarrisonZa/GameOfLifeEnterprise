# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
    docker:
      # NOTE: Keep the image below in sync with what we use in the Dockerfile
      - image: circleci/node:8.9.1-browsers
        environment:
          CHROME_BIN: "/usr/bin/google-chrome"

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache: # Download and cache dependencies
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies- # fallback to using the latest cache if no exact match is found

      - run:
          name: Installing Dependancies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      - run:
          name: Running Tests
          command: yarn test-single

      - run:
          name: Doing docker stuffs
          command: docker --version

      # deployment
      #- deploy: 
      #    command: $DOCKER_HUB_TRIGGER

  build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true

      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app

      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

    #   - deploy:
    #       name: Push application Docker image
    #       command: |
    #         if [ "${CIRCLE_BRANCH}" == "master" ]; then
    #           login="$(aws ecr get-login)"
    #           ${login}
    #           docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
    #           docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
    #         fi

#   deploy:
#     docker: 
#     - image: node:8.9.1-alpine
#     #   auth:
#     #   #Put the contents of keyfile.json into an environment variable for the build called GCR_CREDS, which is then passed in.
#     #     username: _json_key
#     #     password: $GOOGLE_AUTH

#     steps:

#       - run: 
#           name: Dump Google Cloud Credentials to file
#           command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master