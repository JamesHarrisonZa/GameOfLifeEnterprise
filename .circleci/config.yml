version: 2
jobs:

  test:
    docker:
      # NOTE: Keep the image below in sync with what we use in our App Dockerfile
      - image: circleci/node:8.9.1-browsers
        environment:
          CHROME_BIN: "/usr/bin/google-chrome"

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run:
          name: Installing Dependancies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      - run:
          name: Running Tests
          command: yarn test-single

      - run:
          name: Doing docker stuffs
          command: docker --version

  build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git #https://hub.docker.com/r/library/docker/tags/
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip=9.0.0-r1
            pip install docker-compose==1.12.0 awscli==1.11.76

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true

      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t jamesharrisonza/gameoflifetypescript:${CIRCLE_SHA1} .

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app

      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

      - run:
          name: Push Docker image to Dockerhub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push jamesharrisonza/gameoflifetypescript:${CIRCLE_SHA1}

  deploy:
    docker: 
      - image: google/cloud-sdk:alpine #https://hub.docker.com/r/google/cloud-sdk/

    steps:

      - run: 
          name: Installing kubectl
          pwd: /
          command: |
            gcloud components install kubectl

      - run: 
          name: Authenticating with Google Cloud
          command: |
            echo ${GOOGLE_AUTH} >> ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json

      - run: 
          name: Connecting to the Google Cloud cluster
          command: | 
            gcloud container clusters get-credentials ${GOOGLE_CLUSTER_NAME} --zone ${GOOGLE_COMPUTE_ZONE} --project ${GOOGLE_PROJECT_ID}

      - run: 
          name: Rolling Update
          command: | 
            kubectl set image deployments/game-of-life game-of-life=jamesharrisonza/gameoflifetypescript:${CIRCLE_SHA1}
            kubectl rollout status deployment game-of-life

workflows:
  version: 2
  test_build_deploy:
    jobs:

      - test

      - build:
          requires:
            - test
          filters:
            branches:
              only: master

      - deploy:
          requires:
            - build